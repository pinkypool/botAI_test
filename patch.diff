 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/rag_bot.py b/rag_bot.py
index f8df6a60ed44845d38d8dac9a3d2e91ed09dd96f..0eefa48657c5e0d28b273e2625e5ea5dbb1af8e2 100644
--- a/rag_bot.py
+++ b/rag_bot.py
@@ -9,50 +9,51 @@ import pandas as pd
 import logging
 import re
 import glob
 from difflib import get_close_matches
 from geopy.distance import geodesic
 
 # --- Логирование ---
 logging.basicConfig(
     level=logging.INFO,
     format='%(asctime)s - %(levelname)s - %(message)s',
     handlers=[logging.FileHandler('bot.log'), logging.StreamHandler()]
 )
 logger = logging.getLogger(__name__)
 
 # --- Конфиги ---
 MOYSKLAD_API_KEY = "437b4e11276436c76fa225094a7ff48c25e5bc77"
 DGIS_API_KEY = "7c52ad61-fb25-4272-98c9-557a0038ec6c"
 FREE_DELIVERY_SUM = 10000
 
 products_df = pd.read_excel("product_id.xlsx")
 all_product_names = products_df["Название"].str.lower().tolist()
 
 order = []
 pending_product = None
 awaiting_quantity = False
+awaiting_finalize = False
 
 # --- Самовывоз точки (сделай lat/lon если захочешь ускорить работу) ---
 pickup_points = [
     {"city": "Караганда", "name": "Hani, Таттимбета 105",  "address": "Караганда, ул. Таттимбета 105"},
     {"city": "Караганда", "name": "Hani, Шахтеров 52",     "address": "Караганда, ул. Шахтеров 52"},
     {"city": "Караганда", "name": "Hani, ТЦ Глобал Сити",  "address": "Караганда, ТЦ Глобал Сити"},
     {"city": "Караганда", "name": "Hani, ТЦ Таир",         "address": "Караганда, ТЦ Таир"},
     {"city": "Караганда", "name": "Hani, Бухар Жырау 41",  "address": "Караганда, пр. Бухар Жырау 41"},
     {"city": "Караганда", "name": "Hani, Абдирова 172",    "address": "Караганда, ул. Абдирова 172"},
     {"city": "Караганда", "name": "Hani, Гоголя 68",       "address": "Караганда, ул. Гоголя 68"},
     {"city": "Караганда", "name": "Hani, Чкалова 2",       "address": "Караганда, ул. Чкалова 2"},
     {"city": "Караганда", "name": "Hani, Назарбаева 3",    "address": "Караганда, пр. Назарбаева 3"},
     {"city": "Темиртау",  "name": "Hani, пр. Мира 712",    "address": "Темиртау, пр. Мира 712"},
     {"city": "Темиртау",  "name": "Hani, Республики 86",   "address": "Темиртау, ул. Республики 86"},
     {"city": "Темиртау",  "name": "Hani, микрорайон 43а",  "address": "Темиртау, микрорайон 43а"},
     {"city": "Астана",    "name": "Hani, Туркестан 20",    "address": "Астана, ул. Туркестан 20"},
     {"city": "Астана",    "name": "Hani, Туркестан 28",    "address": "Астана, ул. Туркестан 28"},
     {"city": "Астана",    "name": "Hani, Иманбаева 7а",    "address": "Астана, ул. Иманбаева 7а"},
     {"city": "Астана",    "name": "Hani, Мангилик ел 45а", "address": "Астана, пр. Мангилик ел 45а"},
     {"city": "Астана",    "name": "Hani, Тауелсиздик 39",  "address": "Астана, пр. Тауелсиздик 39"},
 ]
 
 delivery_zones = {
     "город": 500, "юго-восток": 500, "михайловка": 500, "за церковью": 1000,
     "федоровка": 500, "после пожарной части": 1000, "майкудук до тд умай": 1000,
diff --git a/rag_bot.py b/rag_bot.py
index f8df6a60ed44845d38d8dac9a3d2e91ed09dd96f..0eefa48657c5e0d28b273e2625e5ea5dbb1af8e2 100644
--- a/rag_bot.py
+++ b/rag_bot.py
@@ -241,56 +242,66 @@ awaiting_address = False
 clarifying_phrases = [
     'есть в наличии', 'есть?', 'можно забрать?', 'доступен?', 'самовывоз',
     'где забрать', 'а есть', 'есть ли в наличии', 'наличие?', 'где взять',
     'забрать', 'на точке', 'на какой точке', 'доступен для самовывоза', 'точка',
     'доставка', 'с доставкой'
 ]
 
 while True:
     q = input("Вы: ").strip()
     logger.info(f"Получен вопрос: '{q}'")
 
     if awaiting_address:
         user_address = q
         total = summarize_order()
         respond_with_delivery_info(user_address, total)
         awaiting_address = False
         continue
 
     if awaiting_quantity:
         if q.isdigit():
             qty = int(q)
             order.append({"name": pending_product["name"], "price": pending_product["price"], "quantity": qty})
             print(f"Бот: Добавлено {pending_product['name']} x{qty} в заказ.")
             pending_product = None
             awaiting_quantity = False
-            print("Бот: Хотите выбрать что-то ещё? Если закончили, напишите 'самовывоз' или укажите адрес доставки.")
-            awaiting_delivery_choice = True
+            print("Бот: Если хотите добавить ещё товары, напишите их название. Когда закончите, напишите 'оформить заказ'.")
+            awaiting_finalize = True
         else:
             print("Бот: Пожалуйста, укажите количество цифрой.")
         continue
 
+    if awaiting_finalize:
+        if q.lower() in ["оформить заказ", "оформить", "завершить", "конец", "нет"]:
+            summarize_order()
+            print("Бот: Укажите 'самовывоз' или адрес доставки для оформления.")
+            awaiting_finalize = False
+            awaiting_delivery_choice = True
+            continue
+        else:
+            awaiting_finalize = False
+
     if awaiting_delivery_choice:
         if "самовывоз" in q.lower() or "забрать" in q.lower():
             summarize_order()
             print(
                 "Бот: Укажите город или адрес, чтобы подсказать ближайшую точку самовывоза."
             )
             awaiting_delivery_choice = False
             awaiting_address = True
             continue
         else:
             user_address = q
             total = summarize_order()
             respond_with_delivery_info(user_address, total)
             awaiting_delivery_choice = False
             continue
 
 
     # --- Определяем стоимость доставки, ближайшую точку по адресу или району ---
     if any(word in q.lower() for word in ["город", "адрес", "нахожусь", "я из", "район", "доставка"]):
         user_address = q
         total = summarize_order()
         respond_with_delivery_info(user_address, total)
         continue
 
     # --- Товарный выбор и остальное ---
 
EOF
)